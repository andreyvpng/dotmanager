#!/bin/bash


# Get all files in the directory of recursive methods
get_files() {
  local dir_name=$1
  local files=$(ls -a $dir_name)
  for item in $files; do
    case $item in
      ".")
        continue;;
      "..")
        continue;;
      *)
        local item_path="$1/$item"

        # if item is directory then run recursive to
        # get files in this directory
        if [ -d "${item_path}" ]; then
          get_files $item_path

        # if item is file then echo path to this file
        elif [ -f "${item_path}" ]; then
          echo $item_path;
        fi
    esac
  done
}


create_link() {
  local source_file_path=$1
  local link_path="/home/$USER/$2"
  local link_path_dirname=$(dirname $link_path)

  if [ -f $link_path ] && [ ! -L $link_path ]; then
    backup $link_path
    ln -s $source_file_path $link_path
  elif [ ! -d $link_path_dirname ]; then
  # if path to dir is not exist then create
    mkdir -p $link_path_dirname
  elif [ -L $link_path ]; then
    echo  $link_path:link exist!
  else
    #echo "Source" $source_file_path  "Link" $link_path
    ln -s $source_file_path $link_path
  fi
}


delete_link() {
  local path_to_link="/home/$USER/$1"
  if [ -L $path_to_link ]; then
    unlink $path_to_link
  fi
}


backup() {
  local file_path=$1

  local backup_file_path=$backup_dir_path/${file_path#/home/$(whoami)}
  local backup_file_dir_path=$(dirname $backup_file_path)

  if [ -f $backup_file_path ]; then
    echo $backup_file_path: already exist. backup is impossible
    exit 2
  fi

  if [ ! -d $backup_file_dir_path ]; then
    mkdir -p $backup_file_dir_path
  fi

  mv $file_path $backup_file_dir_path
}


usage()
{
   echo ""
   echo "Usage: $0 -d dir -c command -b backup_dir"
   local EXIT_WITH_ERROR=1
   exit $EXIT_WITH_ERROR
}


while getopts ":c:d:b:" opt; do
   case "$opt" in
      c)
        command=${OPTARG}
        if [ $command == "add" ] ||
           [ $command == "delete" ]; then
          continue
        else
          usage
        fi;;
      d)
        dir=${OPTARG}
        dir_path=$(pwd)/$dir/
        if [ ! -d "$dir_path" ]; then
          echo "$dir_path is not directory "
          usage
        fi;;
      b)
        backup_dir=${OPTARG}
        backup_dir_path=$(pwd)/$backup_dir;;
      *)
        usage;;
   esac
done


if [ -z "${command}" ] || [ -z "${dir}" ]; then
  usage
fi


path_to_dir=$(pwd)/$dir
directory_files=$(get_files $path_to_dir)

for file in $directory_files
do
  if [ $command = "add" ]; then
    create_link $file "${file#$path_to_dir/}"
  elif [ $command = "delete" ]; then
    delete_link "${file#$path_to_dir/}"
  fi
done
